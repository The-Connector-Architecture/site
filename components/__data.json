{"type":"data","nodes":[null,{"type":"data","data":[{"procs":1,"channels":156,"runners":255},[2,25,50,64,81,88,96,123,145],{"id":3,"title":4,"description":5,"parameters":6,"type":23,"location":24},"https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#Sdsify","Sdsify processor","Ingest non sds members and wrap them inside SDS records. Optionally, a type can be specified to indicate the correct subject.",[7,12,16,20],{"name":8,"type":9,"path":10,"optional":11},"Data input channel","ReaderChannel","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#input",true,{"name":13,"type":14,"path":15,"optional":11},"Data output channel","WriterChannel","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#output",{"name":17,"type":18,"path":19,"optional":11},"Stream to add these members to","String","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#stream",{"name":21,"type":18,"path":22,"optional":11},"Convert only these objects","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#objectType","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#JsProcess","https:\u002F\u002Fraw.githubusercontent.com\u002Fajuvercr\u002Fsds-processors\u002Fmaster\u002Fsdsify.ttl",{"id":26,"title":27,"description":28,"parameters":29,"type":23,"location":49},"https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#Bucketize","Bucketizer processor","This bucketizer processor is a SDS processor. It takes in SDS records and SDS metadata and bucketizes the incoming records according to some bucketize strategy. The metadata is also transformed to reflect this transformation. Many SDS streams can be present on the incoming data channel, please specify what stream to ingest and what stream to produce.",[30,32,35,37,40,43,46],{"name":8,"type":9,"path":31,"optional":11},"https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#dataInput",{"name":33,"type":9,"path":34,"optional":11},"Metadata input channel","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#metadataInput",{"name":13,"type":14,"path":36,"optional":11},"https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#dataOutput",{"name":38,"type":14,"path":39,"optional":11},"Metadata output channel","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#metadataOutput",{"name":41,"type":18,"path":42,"optional":11},"Location of bucketization strategy file","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#bucketizeStrategy",{"name":44,"type":18,"path":45,"optional":11},"ID of Stream to transform","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#inputStreamId",{"name":47,"type":18,"path":48,"optional":11},"ID of Stream to produce","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#outputStreamId","https:\u002F\u002Fraw.githubusercontent.com\u002Fajuvercr\u002Fsds-processors\u002Fmaster\u002F2_bucketstep.ttl",{"id":51,"title":52,"description":53,"parameters":54,"type":23,"location":63},"https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#Generate","Simple Data Generator","Simple RDF data generator used for testing. This processor will peridically generate RDF objects with 3 to 4 predicates.",[55,56,60],{"name":13,"type":14,"path":15,"optional":11},{"name":57,"type":58,"path":59,"optional":11},"count","unknown","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#count",{"name":61,"type":18,"path":62,"optional":11},"How fast you wanne go?","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#waitMS","https:\u002F\u002Fraw.githubusercontent.com\u002Fajuvercr\u002Fsds-processors\u002Fmaster\u002Fgenerator.ttl",{"id":65,"title":66,"description":67,"parameters":68,"type":23,"location":80},"https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#Substitute","String substitute processor","Simple string manipulation processor. Transform a stream by applying the string substituation on the messages. The matching string can be a regex.",[69,70,71,74,77],{"name":8,"type":9,"path":10,"optional":11},{"name":13,"type":14,"path":15,"optional":11},{"name":72,"type":18,"path":73,"optional":11},"Source string to change","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#source",{"name":75,"type":18,"path":76,"optional":11},"Replace string to change into","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#replace",{"name":78,"type":58,"path":79,"optional":11},"Source is regexp","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#regexp","https:\u002F\u002Fraw.githubusercontent.com\u002Fajuvercr\u002Fsds-processors\u002Fmaster\u002FstringManipulations.ttl",{"id":82,"title":83,"description":84,"parameters":85,"type":23,"location":80},"https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#Envsub","Environment substitute processor","Substitutes all declared environment variables to their respective values.",[86,87],{"name":8,"type":9,"path":10,"optional":11},{"name":13,"type":14,"path":15,"optional":11},{"id":89,"title":90,"description":91,"parameters":92,"type":23,"location":95},"https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#Y2R","yarrml processor","The Yarrml processor transforms YARRML documents into RML mapping documents.",[93,94],{"name":13,"type":14,"path":15,"optional":11},{"name":8,"type":9,"path":10,"optional":11},"https:\u002F\u002Fraw.githubusercontent.com\u002Fajuvercr\u002Fsds-processors\u002Fmaster\u002Fyarrrml.ttl",{"id":97,"title":98,"description":99,"parameters":100,"type":23,"location":122},"https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#Ingest","LDES-server ingestor (mongoDB)","Processor that can ingest a SDS stream to generate a Linked Data Eventstream. Uses sds:Bucket to describe the used fragmentation (see js:Bucketize). If ldes:timestampPath is declared it will automatically create a timestamp fragmentation for the leaves.",[101,104,106,109,112,115,118],{"name":102,"type":9,"path":31,"optional":103},"Data Input channel",false,{"name":105,"type":9,"path":34,"optional":103},"Metadata Input Channel",{"name":107,"type":18,"path":108,"optional":103},"Name of the metadata collection","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#metadataCollection",{"name":110,"type":18,"path":111,"optional":103},"Name of the data collection","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#dataCollection",{"name":113,"type":18,"path":114,"optional":103},"Name of the index collection","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#indexCollection",{"name":116,"type":18,"path":117,"optional":11},"Connection url used to connect to the mongo database","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#databaseUrl",{"name":119,"type":120,"path":121,"optional":11},"Used page size for the timestamp fragmentation","integer","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#pageSize","https:\u002F\u002Fraw.githubusercontent.com\u002FTREEcg\u002Fsds-storage-writer-mongo\u002Fmaster\u002Fstep.ttl",{"id":124,"title":124,"description":-1,"parameters":125,"type":23,"location":144},"https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#RmlMapperString",[126,129,132,135,138,141],{"name":127,"type":18,"path":128,"optional":11},"Mapping file location","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#rml_mapping_location",{"name":130,"type":14,"path":131,"optional":11},"Output channel","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#rml_data_output",{"name":133,"type":9,"path":134,"optional":11},"Input channel","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#rml_data_input",{"name":136,"type":18,"path":137,"optional":11},"Mapping reference formulation","https:\u002F\u002Fw3id.org\u002Fconn\u002Frml#referenceFormulation",{"name":139,"type":18,"path":140,"optional":11},"Mapping iterator","https:\u002F\u002Fw3id.org\u002Fconn\u002Frml#iterator",{"name":142,"type":18,"path":143,"optional":11},"Cron expression","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#cron","https:\u002F\u002Fraw.githubusercontent.com\u002Fjulianrojas87\u002Frml-mapper-processor-ts\u002Fmaster\u002FrmlMapper.ttl",{"id":146,"title":146,"description":-1,"parameters":147,"type":23,"location":144},"https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#RmlMapperReader",[148,151,152,153,154,155],{"name":149,"type":9,"path":150,"optional":11},"Mapping file reader","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#rml_mapping_reader",{"name":130,"type":14,"path":131,"optional":11},{"name":133,"type":9,"path":134,"optional":11},{"name":136,"type":18,"path":137,"optional":11},{"name":139,"type":18,"path":140,"optional":11},{"name":142,"type":18,"path":143,"optional":11},[157,169,197,215,241],{"id":158,"title":159,"description":160,"location":161,"parameters":162,"writer":163,"reader":166},"https:\u002F\u002Fw3id.org\u002Fconn#JsChannel","Javascript in memory channel","Channel only used by the JsRunner, enabling fast in memory communication.","https:\u002F\u002Fraw.githubusercontent.com\u002Fajuvercr\u002Fjs-runner\u002Fmaster\u002Fontology.ttl",[],{"id":164,"parameters":165},"https:\u002F\u002Fw3id.org\u002Fconn#JsWriterChannel",[],{"id":167,"parameters":168},"https:\u002F\u002Fw3id.org\u002Fconn#JsReaderChannel",[],{"id":170,"title":171,"description":172,"location":173,"parameters":174,"writer":175,"reader":190},"https:\u002F\u002Fw3id.org\u002Fconn#FileChannel","File channel","Enables data communication over files. This is very useful to create a channel from a static file.","https:\u002F\u002Fraw.githubusercontent.com\u002FTREEcg\u002Fconnector-architecture\u002Fmain\u002Fchannel\u002Ffile.ttl",[],{"id":176,"parameters":177},"https:\u002F\u002Fw3id.org\u002Fconn#FileWriterChannel",[178,181,184,187],{"name":179,"type":18,"path":180,"optional":11},"path","https:\u002F\u002Fw3id.org\u002Fconn#filePath",{"name":182,"type":58,"path":183,"optional":11},"on replace","https:\u002F\u002Fw3id.org\u002Fconn#fileOnReplace",{"name":185,"type":58,"path":186,"optional":11},"Encoding","https:\u002F\u002Fw3id.org\u002Fconn#fileEncoding",{"name":188,"type":58,"path":189,"optional":11},"Read first content","https:\u002F\u002Fw3id.org\u002Fconn#fileReadFirstContent",{"id":191,"parameters":192},"https:\u002F\u002Fw3id.org\u002Fconn#FileReaderChannel",[193,194,195,196],{"name":179,"type":18,"path":180,"optional":11},{"name":182,"type":58,"path":183,"optional":11},{"name":185,"type":58,"path":186,"optional":11},{"name":188,"type":58,"path":189,"optional":11},{"id":198,"title":199,"description":200,"location":201,"parameters":202,"writer":203,"reader":212},"https:\u002F\u002Fw3id.org\u002Fconn#HttpChannel","Http Channel","Channel that posts each message to an endpoint.","https:\u002F\u002Fraw.githubusercontent.com\u002FTREEcg\u002Fconnector-architecture\u002Fmain\u002Fchannel\u002Fhttp.ttl",[],{"id":204,"parameters":205},"https:\u002F\u002Fw3id.org\u002Fconn#HttpWriterChannel",[206,209],{"name":207,"type":18,"path":208,"optional":11},"endpoint","https:\u002F\u002Fw3id.org\u002Fconn#httpEndpoint",{"name":210,"type":58,"path":211,"optional":11},"method","https:\u002F\u002Fw3id.org\u002Fconn#httpMethod",{"id":213,"parameters":214},"https:\u002F\u002Fw3id.org\u002Fconn#HttpReaderChannel",[],{"id":216,"title":217,"description":218,"location":219,"parameters":220,"writer":221,"reader":230},"https:\u002F\u002Fw3id.org\u002Fconn#KafkaChannel","Kafka channel","Channel that uses Apache Kafka to transport messages. Comes with faul tolerance etc.","https:\u002F\u002Fraw.githubusercontent.com\u002FTREEcg\u002Fconnector-architecture\u002Fmain\u002Fchannel\u002Fkafka.ttl",[],{"id":222,"parameters":223},"https:\u002F\u002Fw3id.org\u002Fconn#KafkaWriterChannel",[224,227],{"name":225,"type":18,"path":226,"optional":11},"topic","https:\u002F\u002Fw3id.org\u002Fconn#kafkaTopic",{"name":228,"type":18,"path":229,"optional":11},"broker","https:\u002F\u002Fw3id.org\u002Fconn#kafkaBroker",{"id":231,"parameters":232},"https:\u002F\u002Fw3id.org\u002Fconn#KafkaReaderChannel",[233,234,235,238],{"name":225,"type":18,"path":226,"optional":11},{"name":228,"type":18,"path":229,"optional":11},{"name":236,"type":18,"path":237,"optional":11},"group","https:\u002F\u002Fw3id.org\u002Fconn#kafkaGroup",{"name":239,"type":58,"path":240,"optional":11},"from beginning","https:\u002F\u002Fw3id.org\u002Fconn#kafkaFromBeginning",{"id":242,"title":243,"description":244,"location":245,"parameters":246,"writer":247,"reader":252},"https:\u002F\u002Fw3id.org\u002Fconn#WsChannel","Websockets channel","Channel that uses Websocket technologies to transport data. Enabling higher troughput than the HttpChannel","https:\u002F\u002Fraw.githubusercontent.com\u002FTREEcg\u002Fconnector-architecture\u002Fmain\u002Fchannel\u002Fws.ttl",[],{"id":248,"parameters":249},"https:\u002F\u002Fw3id.org\u002Fconn#WsWriterChannel",[250],{"name":207,"type":18,"path":251,"optional":11},"https:\u002F\u002Fw3id.org\u002Fconn#wsUri",{"id":253,"parameters":254},"https:\u002F\u002Fw3id.org\u002Fconn#WsReaderChannel",[],[256],{"id":23,"title":257,"description":258,"parameters":259,"location":161,"channels":272},"Javascript Runner","The JSRunner is one of the most feature rich runners of the connector architecture. It enables lifting javascript functions to connector architecture components. It allows for fast in memory communication between these processors with the js:JsChannel. More information can be found at https:\u002F\u002Fthe-connector-architecture.github.io\u002Fsite\u002F.",[260,263,266,269],{"name":261,"type":58,"path":262,"optional":11},"Path to main main entry point","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#file",{"name":264,"type":58,"path":265,"optional":11},"Location to root of JS program","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#location",{"name":267,"type":58,"path":268,"optional":11},"Name of the JS function to execute","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#function",{"name":270,"type":58,"path":271,"optional":11},"Mapping for the function arguments","https:\u002F\u002Fw3id.org\u002Fconn\u002Fjs#mapping",[273,274,275,276,277],{"title":159,"id":158},{"title":243,"id":242},{"title":171,"id":170},{"title":217,"id":216},{"title":199,"id":198}],"uses":{}}]}
